// seedCategories.js
const mongoose = require("mongoose");
const Category = require("./src/models/Category"); // ƒë∆∞·ªùng d·∫´n t·ªõi file Category.js

// üëâ thay chu·ªói k·∫øt n·ªëi MongoDB c·ªßa b·∫°n
const MONGO_URI = "mongodb://localhost:27017/PIRA_System";

const categories = [
  {
    name: "L·ªÅu & D·ª•ng c·ª• c·∫Øm tr·∫°i",
    slug: "leu-dung-cu-cam-trai",
    description: "C√°c lo·∫°i l·ªÅu, b·∫°t, t√∫i ng·ªß, gh·∫ø x·∫øp ph·ª•c v·ª• c·∫Øm tr·∫°i",
    children: [
      {
        name: "L·ªÅu c·∫Øm tr·∫°i 2 ng∆∞·ªùi",
        slug: "leu-cam-trai-2-nguoi",
        description: "L·ªÅu g·ªçn nh·∫π cho 1-2 ng∆∞·ªùi ƒëi trekking ho·∫∑c d√£ ngo·∫°i"
      },
      {
        name: "L·ªÅu gia ƒë√¨nh",
        slug: "leu-gia-dinh",
        description: "L·ªÅu r·ªông cho 4-6 ng∆∞·ªùi, ph√π h·ª£p ƒëi nh√≥m ho·∫∑c gia ƒë√¨nh"
      },
      {
        name: "T√∫i ng·ªß & T·∫•m tr·∫£i",
        slug: "tui-ngu-tam-trai",
        description: "T√∫i ng·ªß, t·∫•m tr·∫£i c√°ch nhi·ªát, ƒë·ªám h∆°i"
      },
      {
        name: "Gh·∫ø & B√†n g·∫•p",
        slug: "ghe-ban-gap",
        description: "Gh·∫ø g·∫•p du l·ªãch, b√†n x·∫øp g·ªçn nh·∫π"
      }
    ]
  },
  {
    name: "Ba l√¥ & T√∫i du l·ªãch",
    slug: "ba-lo-tui-du-lich",
    description: "C√°c lo·∫°i ba l√¥ ph∆∞·ª£t, t√∫i ch·ªëng n∆∞·ªõc, t√∫i ƒëeo ti·ªán √≠ch",
    children: [
      {
        name: "Ba l√¥ leo n√∫i",
        slug: "ba-lo-leo-nui",
        description: "Ba l√¥ dung t√≠ch l·ªõn 40L-70L cho trekking v√† leo n√∫i"
      },
      {
        name: "T√∫i ch·ªëng n∆∞·ªõc",
        slug: "tui-chong-nuoc",
        description: "T√∫i kh√¥, t√∫i ch·ªëng n∆∞·ªõc d√πng cho ƒëi bi·ªÉn, ch√®o thuy·ªÅn"
      }
    ]
  },
  {
    name: "Thi·∫øt b·ªã n·∫•u ƒÉn ngo√†i tr·ªùi",
    slug: "thiet-bi-nau-an-ngoai-troi",
    description: "B·∫øp ga mini, b·∫øp c·ªìn, b·ªô n·ªìi xoong ch·∫£o, b√¨nh n∆∞·ªõc du l·ªãch",
    children: [
      {
        name: "B·∫øp & Nhi√™n li·ªáu",
        slug: "bep-nhien-lieu",
        description: "B·∫øp ga mini, b·∫øp c·ªìn, vi√™n n√©n c·ªìn kh√¥"
      },
      {
        name: "B·ªô n·ªìi & D·ª•ng c·ª• ƒÉn u·ªëng",
        slug: "bo-noi-dung-cu-an-uong",
        description: "N·ªìi du l·ªãch, c·ªëc inox, dao nƒ©a g·∫•p g·ªçn"
      },
      {
        name: "B√¨nh n∆∞·ªõc & B√¨nh gi·ªØ nhi·ªát",
        slug: "binh-nuoc-giu-nhiet",
        description: "B√¨nh l·ªçc n∆∞·ªõc, b√¨nh gi·ªØ nhi·ªát cho d√£ ngo·∫°i"
      }
    ]
  },
  {
    name: "ƒê√®n pin & Thi·∫øt b·ªã chi·∫øu s√°ng",
    slug: "den-pin-thiet-bi-chieu-sang",
    description: "ƒê√®n pin si√™u s√°ng, ƒë√®n ƒë·ªôi ƒë·∫ßu, ƒë√®n l·ªÅu, ƒë√®n nƒÉng l∆∞·ª£ng m·∫∑t tr·ªùi",
    children: [
      {
        name: "ƒê√®n pin c·∫ßm tay",
        slug: "den-pin-cam-tay",
        description: "ƒê√®n pin LED si√™u s√°ng, ch·ªëng n∆∞·ªõc"
      },
      {
        name: "ƒê√®n ƒë·ªôi ƒë·∫ßu",
        slug: "den-doi-dau",
        description: "ƒê√®n ƒë·ªôi ƒë·∫ßu d√πng khi trekking ban ƒë√™m"
      },
      {
        name: "ƒê√®n l·ªÅu",
        slug: "den-leu",
        description: "ƒê√®n treo trong l·ªÅu ho·∫∑c ƒë√®n nƒÉng l∆∞·ª£ng m·∫∑t tr·ªùi"
      }
    ]
  },
  {
    name: "D·ª•ng c·ª• an to√†n & C·ª©u h·ªô",
    slug: "dung-cu-an-toan-cuu-ho",
    description: "B·ªô s∆° c·ª©u, dao ƒëa nƒÉng, g·∫≠y leo n√∫i, √°o phao",
    children: [
      {
        name: "B·ªô s∆° c·ª©u",
        slug: "bo-so-cuu",
        description: "T√∫i y t·∫ø, b√¥ng bƒÉng, thu·ªëc c∆° b·∫£n"
      },
      {
        name: "Dao ƒëa nƒÉng & D·ª•ng c·ª• sinh t·ªìn",
        slug: "dao-da-nang-sinh-ton",
        description: "Dao ƒëa nƒÉng, b·∫≠t l·ª≠a sinh t·ªìn, c√≤i c·ª©u h·ªô"
      },
      {
        name: "Trang b·ªã leo n√∫i",
        slug: "trang-bi-leo-nui",
        description: "D√¢y leo n√∫i, m√≥c carabiner, g·∫≠y trekking"
      }
    ]
  },
  {
    name: "Thi·∫øt b·ªã c√¥ng ngh·ªá du l·ªãch",
    slug: "thiet-bi-cong-nghe-du-lich",
    description: "M√°y ·∫£nh, GoPro, flycam, pin d·ª± ph√≤ng, b·ªô ph√°t wifi",
    children: [
      {
        name: "M√°y ·∫£nh & GoPro",
        slug: "may-anh-gopro",
        description: "M√°y ·∫£nh du l·ªãch, GoPro ch·ªëng n∆∞·ªõc"
      },
      {
        name: "Flycam & Drone",
        slug: "flycam-drone",
        description: "Drone quay phim ch·ª•p ·∫£nh"
      },
      {
        name: "Thi·∫øt b·ªã ƒëi·ªán t·ª≠ kh√°c",
        slug: "thiet-bi-dien-tu-khac",
        description: "Pin d·ª± ph√≤ng, b·ªô ph√°t wifi, s·∫°c nƒÉng l∆∞·ª£ng m·∫∑t tr·ªùi"
      }
    ]
  },
  {
    name: "Ph∆∞∆°ng ti·ªán di chuy·ªÉn",
    slug: "phuong-tien-di-chuyen",
    description: "Xe m√°y, xe ƒë·∫°p ƒë·ªãa h√¨nh, v√°n tr∆∞·ª£t, kayak",
    children: [
      {
        name: "Xe m√°y du l·ªãch",
        slug: "xe-may-du-lich",
        description: "Xe s·ªë, xe tay ga cho thu√™ theo ng√†y"
      },
      {
        name: "Xe ƒë·∫°p ƒë·ªãa h√¨nh",
        slug: "xe-dap-dia-hinh",
        description: "Xe ƒë·∫°p MTB, xe ƒë·∫°p ƒë∆∞·ªùng d√†i"
      },
      {
        name: "Kayak & SUP",
        slug: "kayak-sup",
        description: "Thuy·ªÅn kayak, v√°n ch√®o ƒë·ª©ng SUP"
      },
      {
        name: "V√°n tr∆∞·ª£t & Patin",
        slug: "van-truot-patin",
        description: "V√°n tr∆∞·ª£t ƒë·ªãa h√¨nh, gi√†y patin"
      }
    ]
  }
];

async function seed() {
  try {
    await mongoose.connect(MONGO_URI);
    console.log("‚úÖ Connected to MongoDB");

    // X√≥a c≈© ƒë·ªÉ tr√°nh tr√πng slug
    await Category.deleteMany({});
    console.log("üóëÔ∏è Cleared old categories");

    for (const cat of categories) {
      const parent = await Category.create({
        name: cat.name,
        slug: cat.slug,
        description: cat.description,
        level: 0,
        path: cat.slug
      });

      if (cat.children && cat.children.length > 0) {
        for (const child of cat.children) {
          await Category.create({
            name: child.name,
            slug: child.slug,
            description: child.description,
            parentCategory: parent._id,
            level: 1,
            path: `${cat.slug}/${child.slug}`
          });
        }
      }
    }

    console.log("üå± Seed categories successfully");
    process.exit(0);
  } catch (err) {
    console.error("‚ùå Error seeding categories:", err);
    process.exit(1);
  }
}

seed();
